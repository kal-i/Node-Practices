generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id String @id @default(cuid()) // unique session id
  userId String // Reference to the user model
  user User @relation(fields: [userId], references: [id])
  token String @unique // JWT token
  createdAt DateTime @default(now())
  expiresAt DateTime // Token expiry timestamp
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String
  sessions Session[] // One-to-many relationship with Session
  accounts Account[] // One-to-many relationship with Account
}

model Account {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  name String
  type String
  balance Decimal
  transactions BaseTransaction[] // One-to-many relationship with BaseTransaction
  transferTransactions TransferTransaction[]
}

model BaseTransaction {
  id String @id @default(cuid())
  accountId String
  account Account @relation(fields: [accountId], references: [id])
  amount Decimal
  note String
  date DateTime @default(now())

  // One-to-one relationship with a concrete transaction
  expenseTransaction ExpenseTransaction?
  incomeTransaction IncomeTransaction?
  transferTransaction TransferTransaction?
}

model ExpenseTransaction {
  id String @id @default(cuid())
  baseTransactionId String @unique
  baseTransaction BaseTransaction @relation(fields: [baseTransactionId], references: [id])
}

model IncomeTransaction {
  id String @id @default(cuid())
  baseTransactionId String @unique
  baseTransaction BaseTransaction @relation(fields: [baseTransactionId], references: [id])
}

model TransferTransaction {
  id String @id @default(cuid())
  baseTransactionId String @unique
  baseTransaction BaseTransaction @relation(fields: [baseTransactionId], references: [id])
  receipientAccountId String
  receipientAccount Account @relation(fields: [receipientAccountId], references: [id])
}